name: Build and Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: 11

    - name: Build with Maven
      run: mvn clean package --file pom.xml

    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: target/*.jar    

  deploy:
    needs: build
    runs-on: windows-latest
    steps:    
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Deploy to CloudHub
        shell: pwsh
        env:
          ANYPOINT_CLIENT_ID: ${{ secrets.ANYPOINT_CLIENT_ID }}
          ANYPOINT_CLIENT_SECRET: ${{ secrets.ANYPOINT_CLIENT_SECRET }}
          ANYPOINT_ENV: "sandbox" # ou o ambiente que vocÃª deseja usar
          DECRYPTION_KEY: ${{ secrets.DECRYPTION_KEY }}
        run: |
          # Encontrar o nome do artefato
          $artifact = Get-ChildItem -Path . -Filter *.jar | Select-Object -First 1
          
          # Verificar se o artefato foi encontrado
          if ($null -eq $artifact) {
            Write-Error "Erro: Nenhum arquivo JAR encontrado."
            exit 1
          }

          # Executar o comando de deploy
          # mvn deploy -e -X -DmuleDeploy -Dmule.artifact=$artifact.Name -Dclient.id="$env:ID" -Dclient.secret="$env:SECRET"
          $mvnCmd = "mvn deploy -e -X -DmuleDeploy -Dmule.artifact=$($artifact.Name) -Dclient.id=`"$env:ID`" -Dclient.secret=`"$env:SECRET`""
          Write-Host "Executando: $mvnCmd"
          Invoke-Expression $mvnCmd